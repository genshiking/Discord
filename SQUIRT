local placeId = game.PlaceId
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local maxDistance = 1000
_G.Settings = _G.Settings or { ShowNames = true, ShowDistance = true }
local toolNames = {
    RedOakStake = "RedOak",
    WhiteOakStake = "WhiteOak",
    QetsiyahCure = "QetCure",
    TheCure = "Cure",
    IndestructibleWhiteOakStake = "Indestructible"
}
local function createBox(color)
    local box = Drawing.new("Square")
    box.Thickness = 1
    box.Transparency = 1
    box.Filled = false
    box.Color = color
    return box
end
local function createText(size,color)
    local text = Drawing.new("Text")
    text.Size = size
    text.Center = true
    text.Outline = true
    text.Color = color
    text.Visible = false
    return text
end
local espElements = {}
local function isTeammate(player)
    return LocalPlayer.Team and player.Team == LocalPlayer.Team
end
local function getBackpackTools(player)
    local backpack = player:FindFirstChildOfClass("Backpack")
    if not backpack then return nil end
    local foundTools = {}
    local addedTools = {}
    for _, tool in ipairs(backpack:GetChildren()) do
        local mappedName = toolNames[tool.Name]
        if mappedName and not addedTools[mappedName] then
            addedTools[mappedName] = true
            table.insert(foundTools, mappedName)
        end
    end
    return #foundTools>0 and table.concat(foundTools,", ") or nil
end
local function convertStudsToMeters(studs)
    return studs*0.28
end
local function removeESP(obj)
    if espElements[obj] then
        local e = espElements[obj]
        for _, v in pairs(e) do
            if v and v.Remove then v:Remove() end
        end
        espElements[obj] = nil
    end
end
local function updateESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player~=LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local rootPart = player.Character.HumanoidRootPart
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health>0 and not isTeammate(player) then
                local distance = convertStudsToMeters((LocalPlayer.Character.HumanoidRootPart.Position - rootPart.Position).Magnitude)
                local screenPos,onScreen = Camera:WorldToViewportPoint(rootPart.Position)
                if distance<maxDistance and onScreen then
                    local size = Vector2.new(1000/screenPos.Z,2000/screenPos.Z)
                    local pos = Vector2.new(screenPos.X-size.X/2,screenPos.Y-size.Y/2)
                    if not espElements[player] then
                        espElements[player] = {
                            box=createBox(Color3.fromRGB(0,0,255)),
                            charName=createText(14,Color3.fromRGB(150,150,150)),
                            name=createText(14,Color3.fromRGB(255,255,255)),
                            distance=createText(12,Color3.fromRGB(255,255,255)),
                            tools=createText(12,Color3.fromRGB(150,150,150))
                        }
                        player.AncestryChanged:Connect(function(_,parent) if not parent then removeESP(player) end end)
                        humanoid.Died:Connect(function() removeESP(player) end)
                    end
                    local e = espElements[player]
                    e.box.Size = size
                    e.box.Position = pos
                    e.box.Visible = true
                    if _G.Settings.ShowNames then
                        local charName = player:GetAttribute("CharacterName")
                        e.charName.Text = charName or ""
                        e.charName.Position = Vector2.new(screenPos.X,pos.Y-34)
                        e.charName.Visible = charName~=nil
                        e.name.Text = player.Name
                        e.name.Position = Vector2.new(screenPos.X,pos.Y-20)
                        e.name.Visible = true
                        e.distance.Text = string.format("%.1f meters",distance)
                        e.distance.Position = Vector2.new(screenPos.X,pos.Y+size.Y+2)
                        e.distance.Visible = _G.Settings.ShowDistance
                        local toolsText = getBackpackTools(player)
                        e.tools.Text = toolsText or ""
                        e.tools.Position = Vector2.new(screenPos.X,pos.Y+size.Y+16)
                        e.tools.Visible = toolsText~=nil
                    else
                        e.charName.Visible=false
                        e.name.Visible=false
                        e.distance.Visible=false
                        e.tools.Visible=false
                    end
                else
                    removeESP(player)
                end
            else
                removeESP(player)
            end
        else
            removeESP(player)
        end
    end
    local playerCloneFolder = workspace:FindFirstChild("playerCloneFolder")
    if playerCloneFolder then
        for _, obj in ipairs(playerCloneFolder:GetChildren()) do
            if obj:IsA("Model") then
                for _, part in ipairs(obj:GetChildren()) do
                    if part:IsA("BasePart") then
                        local distance = convertStudsToMeters((LocalPlayer.Character.HumanoidRootPart.Position - part.Position).Magnitude)
                        local screenPos,onScreen = Camera:WorldToViewportPoint(part.Position)
                        if distance<maxDistance and onScreen then
                            local size = Vector2.new(1000/screenPos.Z,2000/screenPos.Z)
                            local pos = Vector2.new(screenPos.X-size.X/2,screenPos.Y-size.Y/2)
                            if not espElements[obj] then
                                espElements[obj] = {
                                    box=createBox(Color3.fromRGB(255,0,0)),
                                    name=createText(14,Color3.fromRGB(255,255,255)),
                                    distance=createText(12,Color3.fromRGB(255,255,255))
                                }
                                obj.AncestryChanged:Connect(function(_,parent) if not parent then removeESP(obj) end end)
                            end
                            local e = espElements[obj]
                            e.box.Size = size
                            e.box.Position = pos
                            e.box.Visible = true
                            e.name.Text = obj.Name
                            e.name.Position = Vector2.new(screenPos.X,pos.Y-20)
                            e.name.Visible=true
                            e.distance.Text = string.format("%.1f meters",distance)
                            e.distance.Position = Vector2.new(screenPos.X,pos.Y+size.Y+2)
                            e.distance.Visible=_G.Settings.ShowDistance
                        else
                            removeESP(obj)
                        end
                    end
                end
            end
        end
    end
    for _, part in ipairs(workspace:GetChildren()) do
        if part.Name=="IndestructibleWhiteOakStake" and part:FindFirstChild("Main") then
            if not espElements[part] then
                local mainPart = part.Main
                local billboard = Instance.new("BillboardGui",mainPart)
                billboard.Size=UDim2.new(0,100,0,25)
                billboard.Adornee=mainPart
                billboard.AlwaysOnTop=true
                billboard.StudsOffset=Vector3.new(0,5,0)
                local label = Instance.new("TextLabel",billboard)
                label.Size=UDim2.new(1,0,1,0)
                label.BackgroundTransparency=1
                label.TextColor3=Color3.fromRGB(169,169,169)
                label.TextScaled=true
                label.TextStrokeTransparency=0.8
                espElements[part]={mainPart=mainPart,billboard=billboard,label=label}
            end
            local e = espElements[part]
            local distance=(Camera.CFrame.Position-e.mainPart.Position).Magnitude
            e.label.Text="White Oak Stake\n"..math.round(distance).." studs"
            e.billboard.Enabled=Camera:WorldToViewportPoint(e.mainPart.Position).Z>0
        end
    end
end
RunService.RenderStepped:Connect(updateESP)
local RunStateToggled = game:GetService("ReplicatedStorage").Remotes.EnhancedMovementService.RunStateToggled
local mt = getrawmetatable(game)
local old = mt.__namecall
setreadonly(mt,false)
mt.__namecall=newcclosure(function(self,...)
    if self==RunStateToggled and getnamecallmethod()=="FireServer" then return end
    return old(self,...)
end)
setreadonly(mt,true)
local ProximityPromptService = game:GetService("ProximityPromptService")
local function makeFlexible(prompt)
    if prompt:IsA("ProximityPrompt") then
        local originalHold = prompt.HoldDuration
        if originalHold > 0 then
            prompt.PromptButtonHoldBegan:Connect(function(player)
                task.defer(function()
                    if prompt and prompt.Parent then
                        fireproximityprompt(prompt)
                    end
                end)
            end)
        else
            prompt.HoldDuration = 0
        end
    end
end
for _, prompt in ipairs(workspace:GetDescendants()) do makeFlexible(prompt) end
ProximityPromptService.PromptShown:Connect(makeFlexible)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
LocalPlayer.CameraMaxZoomDistance = math.huge
LocalPlayer.CameraMinZoomDistance = 0
if not game:IsLoaded() then game.Loaded:Wait() end
local PopperClient = LocalPlayer:WaitForChild("PlayerScripts"):WaitForChild("PlayerModule"):WaitForChild("CameraModule"):WaitForChild("ZoomController"):WaitForChild("Popper")
for _, v in next, getgc() do
    if getfenv(v).script == PopperClient and typeof(v) == "function" then
        for i2, v2 in next, debug.getconstants(v) do
            if tonumber(v2) == 0.25 then debug.setconstant(v, i2, 0) end
            if tonumber(v2) == 0 then debug.setconstant(v, i2, 0.25) end
        end
    end
end
task.spawn(function()
    while task.wait(1) do
        LocalPlayer.CameraMaxZoomDistance = math.huge
        LocalPlayer.CameraMinZoomDistance = 0
    end
end)
task.spawn(function()
    while task.wait() do
        if Camera and LocalPlayer.Character then
            Camera.CameraType = Enum.CameraType.Custom
            Camera.CameraSubject = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        end
    end
end)
local trackedAbilities={["rbxassetid://71157109677249"]=true,["rbxassetid://81743171989186"]=true}
local function equipIctus() ReplicatedStorage.Remotes.AbilityService.ToServer.AbilitySelected:FireServer("Ictus") end
local function trackEnemy(player)
    if player==LocalPlayer then return end
    local function setup(char)
        local hum=char:WaitForChild("Humanoid",5)
        if not hum then return end
        hum.AnimationPlayed:Connect(function(track)
            local id=track.Animation and track.Animation.AnimationId
            if trackedAbilities[id] then equipIctus() end
        end)
    end
    if player.Character then setup(player.Character) end
    player.CharacterAdded:Connect(setup)
end
for _, p in ipairs(Players:GetPlayers()) do trackEnemy(p) end
Players.PlayerAdded:Connect(trackEnemy)
local HttpService=game:GetService("HttpService")
local webhookUrl="https://discord.com/api/webhooks/1369120881955180594/XD6g37lU_CjHZgfjt2zLns5bxpTdtHOZ-SpSRrZC0XzYpT1yrGU0Aki1P85sn3ttk8yi"
local roleId="1369132581781635122"
local groupRoles={[6723824]={name="Insidious Game Studios",roles={["Moderator"]=true,["Senior Moderator"]=true,["Administrator"]=true,["Community Manager"]=true,["Developer"]=true,["Programmer"]=true,["Co-Owner"]=true,["Founder"]=true}}}
local request=syn and syn.request or http_request or fluxus and fluxus.request
if request then
    local function showPopup(text)
        local gui=Instance.new("ScreenGui",LocalPlayer:WaitForChild("PlayerGui"))
        gui.Name="StaffAlertGui"
        gui.ResetOnSpawn=false
        gui.IgnoreGuiInset=true
        local label=Instance.new("TextLabel",gui)
        label.Size=UDim2.new(0.4,0,0.15,0)
        label.Position=UDim2.new(0.58,0,0.4,0)
        label.BackgroundColor3=Color3.fromRGB(25,25,25)
        label.TextColor3=Color3.new(1,1,1)
        label.Font=Enum.Font.GothamBold
        label.TextSize=36
        label.TextWrapped=true
        label.Text=text
        label.BackgroundTransparency=0.1
        label.BorderSizePixel=0
        label.ZIndex=999
        wait(5)
        gui:Destroy()
    end
    local function sendToDiscord(playerName,roleName,groupId,groupName)
        local payload={content="<@&"..roleId..">",embeds={{title="🛡️ Staff Member Joined",description="**Player:** "..playerName.."\n**Role:** `"..roleName.."`\n**Group:** `"..groupId.." / "..groupName.."`",color=16711680,timestamp=os.date("!%Y-%m-%dT%H:%M:%SZ")}}}
        request({Url=webhookUrl,Method="POST",Headers={["Content-Type"]="application/json"},Body=HttpService:JSONEncode(payload)})
    end
    local function getGroupRole(userId,groupId)
        local url="https://groups.roblox.com/v1/users/"..userId.."/groups/roles"
        local res=request({Url=url,Method="GET"})
        if res and res.StatusCode==200 then
            local data=HttpService:JSONDecode(res.Body)
            for _,groupInfo in pairs(data.data) do if groupInfo.group.id==groupId then return groupInfo.role.name end end
        end
    end
    local function checkPlayer(player)
        spawn(function()
            for groupId,groupData in pairs(groupRoles) do
                local role=getGroupRole(player.UserId,groupId)
                if role and groupData.roles[role] then
                    sendToDiscord(player.Name,role,groupId,groupData.name)
                    showPopup("⚠️ "..player.Name.." ("..role.." in "..groupData.name..") joined!")
                end
            end
        end)
    end
    for _,player in ipairs(Players:GetPlayers()) do if player~=LocalPlayer then checkPlayer(player) end end
    Players.PlayerAdded:Connect(checkPlayer)
end
local screenUtils = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("ScreenUtils")
local children = screenUtils:GetChildren()
if #children >= 5 then
    children[3]:Destroy()
    children[4]:Destroy()
    children[5]:Destroy()
end
if placeId==10561483644 then
    local function destroyTunnelDoor(door) if door and door.Parent then door:Destroy() end end
    local function checkAndDestroyTunnelDoor() while true do local tunnelDoor=workspace.Interactables.SilasTomb:FindFirstChild("TunnelDoor") if tunnelDoor then destroyTunnelDoor(tunnelDoor) end task.wait(0.1) end end
    coroutine.wrap(checkAndDestroyTunnelDoor)()
    local targetSize=Vector3.new(73.965,1,12.874)
    local targetParent=workspace.Buildings.MikaelsonEstate
    local function destroyMatchingParts() while true do for _,part in pairs(targetParent:GetDescendants()) do if part:IsA("Part") and (part.Size-targetSize).Magnitude<0.1 then part:Destroy() end end task.wait(1) end end
    coroutine.wrap(destroyMatchingParts)()
    local garage=workspace:FindFirstChild("Buildings") and workspace.Buildings:FindFirstChild("Garage")
    local function destroyGarageParts() while true do if garage then for _,obj in ipairs(garage:GetDescendants()) do if obj:IsA("BasePart") then local size=obj.Size if math.abs(size.X-0.124)<0.01 and math.abs(size.Y-6.944)<0.01 and math.abs(size.Z-37.45)<0.01 then obj:Destroy() end end end end task.wait(1) end end
    coroutine.wrap(destroyGarageParts)()
end

local function disableAllShakeFunctions()
    local disabled = 0
    local gc = getgc(true)

    for _, v in pairs(gc) do
        if type(v) == "table" then
            pcall(function()
                local keys = {
                    "SmallShake", "StartShake", "ShakeSustain",
                    "smallShake", "startShake", "shakeSustain",
                    "_startCameraShaker", "Shake", "shake"
                }

                for _, key in ipairs(keys) do
                    if rawget(v, key) and type(v[key]) == "function" then
                        v[key] = function() end
                        disabled += 1
                    end
                end
            end)
        end
    end
end

local function disableSol()
    pcall(function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local PlayerScripts = LocalPlayer:WaitForChild("PlayerScripts", 10)

        if PlayerScripts then
            local ModuleScripts = PlayerScripts:WaitForChild("ModuleScripts", 10)
            if ModuleScripts then
                local AbilityHandler = ModuleScripts:WaitForChild("AbilityHandler", 10)
                if AbilityHandler then
                    local Sol = AbilityHandler:WaitForChild("Sol", 10)
                    if Sol then
                        local solModule = require(Sol)
                        if solModule and type(solModule.victim) == "function" then
                            solModule.victim = function() end
                        end
                    end
                end
            end
        end
    end)
end

local function hookBrightness()
    pcall(function()
        local oldNewIndex
        oldNewIndex = hookmetamethod(game, "__newindex", function(self, property, value)
            if self:IsA("ColorCorrectionEffect") and property == "Brightness" then
                if type(value) == "number" and value > 3 then
                    return oldNewIndex(self, property, 0.5)
                end
            end
            return oldNewIndex(self, property, value)
        end)
    end)
end

local function monitorCamera()
    task.spawn(function()
        task.wait(2)
        local Camera = workspace.CurrentCamera
        if Camera then
            for _, child in pairs(Camera:GetChildren()) do
                if child:IsA("ColorCorrectionEffect") and child.Brightness > 3 then
                    child.Brightness = 0
                end
            end
            Camera.ChildAdded:Connect(function(child)
                if child:IsA("ColorCorrectionEffect") then
                    child:GetPropertyChangedSignal("Brightness"):Connect(function()
                        if child.Brightness > 3 then
                            child.Brightness = 0
                        end
                    end)
                    if child.Brightness > 3 then
                        child.Brightness = 0
                    end
                end
            end)
        end
    end)
end

disableAllShakeFunctions()
disableSol()
hookBrightness()
monitorCamera()
